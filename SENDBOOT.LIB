BOOTER MACRO		;;Come here if ATARI asks for sector
			;;1,2, or 3
			;;
SBOOT	LXI	H,BOOT	;; The pointer to the begining of data
	LXI	D,128	;; DE is used to increment HL by 128
	LDA	DAUX1	;; Get sector number
SECNL	DCR	A
	JZ	SENDPREP ;;HL points to sec (DAUX1) of boot
	DAD	D	;; HL=HL+128
	JMP	SECNL

SENDPREP CALL IPRINT	;; I AM SENDING BOOT SECTOR # DAUX1
	DB CR,LF,'I am sending boot sector number  ',0
	LDA	DAUX1
	CALL	PUTHEX
	MVI	A,0	;; checksum is  so far
	STA	CHECKSUM
	MVI	D,128	;; send 128 bytes
SBOOTL  MOV	A,M	;;
	CALL  ADDCHKSM	;; Compute the check sum
	MOV	C,A	;; we are going to send the C
	CALL  PUTC	;; I told you we would send it
	INX	H		;; 
	DCR	D		;; only 128 now
	JNZ	SBOOTL	;;
	LDA	CHECKSUM
	MOV	C,A	;;
	CALL  PUTC	;; send the check sum
 	JMP	GETHI	;; next command

			;;
BOOT  DB 0			;;30	  .BYTE	;
 DB 3			;;40	  .BYTE 3
 DB 0H,7			;;50	  .WORD START
 DB 6H,7			;;60	  .WORD BPINIT
 DB 0A9H,0B9H  		;;70 BPINIT	LDA  #PND+132&255
 DB 8DH,0E7H,02 	;;80	  STA  MEMLO
 DB 8DH,0EH,00 	;;90	  STA  APPMHI
 DB 0A9H,8  		;;10	LDA  #PND+132/256
 DB 8DH,0E8H,02	;;110	STA  MEMLO+1
 DB 8DH,0FH,00	;;120	STA  APPMHI+1  
 DB 20H,01BH,7	;;130	JSR  PINIT
 DB 18H			;;140	CLC	
 DB 60H			;;150	RTS	
 DB 0A9H,044H  		;;180 PINIT  LDA  #'D	'
 DB 8DH,029H,03	;;190	STA  $329
 DB 0A9H,02BH  		;;20	LDA  #TAB&255  
 DB 8DH,02AH,03	;;210	STA  $32A
 DB 0A9H,7  		;;220	LDA  #TAB/256  
 DB 8DH,02BH,03	;;230	STA  $32B
 DB 60H			;;240	RTS	
 DB 46H,7  		;;480 TAB	.WORD OPEN-1
 DB 7FH,7  		;;490	.WORD CLOSE-1  
 DB 9AH,7  		;;50	.WORD GETBYTE-1
 DB 0FFH,7  		;;510	.WORD PUTBYTE-1
 DB 39H,7  		;;520	.WORD STAT-1
 DB 0DAH,7  		;;530	.WORD RET-1	; XIO
 DB 4CH,0DBH,7	;;540	JMP  RET	; INIT
 DB 0A9H,053H  		;;550 STAT	LDA  #'S'	; S FOR STATUS
 DB 8DH,0AH,03	;;560	STA  DAUX1
 DB 0A9H,053H  		;;570 STATMA LDA  #$53	;MINUS AUX
 DB 8DH,02H,03	;;580	STA  DCOMND
 DB 4CH,053H,0E4H	;;590	JMP  DSKIF
 DB 20H,066H,7	;;630 OPEN	JSR  DKSETUP
 DB 0A9H,04FH  		;;640	LDA  #'O ; O FOR OPEN
 DB 8DH,0BH,03	;;650	STA  DAUX2
 DB 8EH,7EH,7	;;660	STX  IOCBNUM
 DB 0BDH,044H,03	;;670	LDA  $344,X; POINTER NAME 
 DB 8DH,04H,03	;;680	STA  $304
 DB 0BDH,045H,03	;;690	LDA  $345H,0X
 DB 8DH,05H,03	;;70	STA  $305
 DB 20H,01EH,8	;;710	JSR  DBUFFL	; NAME 
 DB 0A9H,00  		;;715	LDA  #0
 DB 8DH,0AH,03	;;716	STA DAUX1
 DB 0A9H,033H  		;;720 DKSETUP LDA #DKBUF&255 ; 
 DB 8DH,04H,03	;;730	STA  $304
 DB 0A9H,8  		;;740	LDA  #DKBUF/256
 DB 8DH,05H,03	;;750	STA  $305
 DB 0A9H,01  		;;760	LDA  #1
 DB 8DH,01H,03	;;770	STA  $301
 DB 0A9H,058H  		;;780	LDA  #'X; NOT OPEN
 DB 8DH,0BH,03		;;790	STA  DAUX2
 DB 0EEH,0AH,03		;;795	INC  DAUX1	; 
 DB 60H			;;80	RTS	
 DB 0			;;810 IOCBNUM .BYTE	IOCB NUMBER 
 DB 0			;;820 HOWUSED .BYTE	;;
 DB 0ADH,7FH,7		;;830 CLOSE  LDA  HOWUSED
 DB 0C9H,052H  		;;840	CMP  #'R	; R = READ
 DB 0F0H,0CH  		;;850	BEQ  DONECLOS	; 
 DB 0A9H,01AH  		;;860 CLOSEL LDA  #$1A
 DB 20H,00H,8		;;870	JSR  PUTBYTE
 DB 0AEH,032H,8		;;880	LDX  DKBPNT
 DB 0E0H,00  		;;890	CPX  #0
 DB 0D0H,0F4H  		;;90	BNE  CLOSEL
 DB 0A9H,043H  		;;910 DONECLOS LDA #'C	'  ; C 
 DB 8DH,0BH,03		;;920	STA  DAUX2
 DB 4CH,03FH,7		;;930	JMP  STATMA	;
 DB 0A0H,052H  		;;940 GETBYTE LDY #'R	'
 DB 8CH,7FH,7		;;950	STY  HOWUSED
 DB 0AEH,032H,8		;;960	LDX  DKBPNT
 DB 0E0H,00  		;;970	CPX  #0
 DB 0D0H,0FH  		;;980	BNE  ISAB
 DB 0A9H,052H  		;;990	LDA  #'R	'
 DB 8DH,02H,03		;;100	STA  DCOMND
 DB 20H,066H,7		;;1010	JSR  DKSETUP
 DB 20H,053H,0E4H	;;1020	JSR  DSKIF
 DB 0C0H,01  		;;1025	CPY  #SUCCES
 DB 0D0H,027H  		;;1026	BNE  RETURN
 DB 0AEH,032H,8		;;1030 ISAB	LDX  DKBPNT
 DB 0BDH,033H,8		;;1040	LDA  DKBUFH,0X
 DB 0E8H			;;1050	INX	
 DB 0E0H,80H  		;;1060	CPX  #128
 DB 0D0H,02  		;;1070	BNE  SETDBPNT  
 DB 0A2H,00  		;;1080  LDX  #0 ; IF WAS 128 
 DB 8EH,032H,8		;;1090 SETDBPNT STX DKBPNT
 DB 20H,0E1H,7		;;110	JSR  WHATTYPE  
 DB 0C0H,7  		;;1110	CPY  #7	; GET BINARY
 DB 0F0H,0EH  		;;1120	BEQ  RET
 DB 0C9H,01AH  		;;1130	CMP  #$1A
 DB 0F0H,0DH  		;;1140	BEQ  EOF
 DB 0C9H,0DH  		;;1150	CMP  #$0D
 DB 0F0H,0C6H  		;;1160	BEQ  GETBYTE
 DB 0C9H,0AH  		;;1170	CMP  #$0A
 DB 0D0H,02  		;;1180	BNE  RET
 DB 0A9H,09BH  		;;1190	LDA  #$9B
 DB 0A0H,01  		;;120 RET	LDY  #SUCCES
 DB 060H			;;1210 RETURN RTS	
 DB 0A0H,88H  		;;1220 EOF	LDY  #$88
 DB 60H			;;1230	RTS	
 DB 0ACH,51H,0A0H	;;1240 WHATTYPE LDY $A051
 DB 0AEH,7EH,7		;;1241	LDX  IOCBNUM
 DB 0C0H,045H  		;;1242	CPY  #$45
 DB 0F0H,4  		;;1244	BEQ  ASMEDIT
 DB 0BCH,042H,03	;;1245	LDY  $342H,0X
 DB 60H			;;1260	RTS	
 DB 0E0H,020H  		;;1262 ASMEDIT CPX #$20
 DB 0F0H,03H  		;;1264	BEQ  OBJCODE
 DB 0A0H,03  		;;1265	LDY  #$3
 DB 60H			;;1266	RTS	
 DB 0A0H,0BH  		;;1267 OBJCODE LDY #11
 DB 60H			;;1268	RTS	
 DB 0A9H,0DH  		;;1270 EOL	LDA  #$0D
 DB 20H,00H,8	;;1280	JSR  PUTBYTE
 DB 0A9H,0AH  		;;1290	LDA  #$0A CPM NE 2 CHARS
 DB 0A0H,057H  		;;130 PUTBYTE LDY #'W ; W= WRITE
 DB 8CH,7FH,7	;;1310	STY  HOWUSED
 DB 20H,0E1H,7	;;1320	JSR  WHATTYPE  
 DB 0C0H,0BH  		;;1330	CPY  #11; PUT BINARY
 DB 0F0H,04  		;;1340	BEQ  PUTLIT
 DB 0C9H,09BH  		;;1350	CMP  #$9B
 DB 0F0H,0E9H  		;;1360	BEQ  EOL
 DB 0AEH,032H,8	;;1370 PUTLIT LDX  DKBPNT
 DB 9DH,033H,8	;;1380	STA  DKBUFH,0X
 DB 0E8H			;;1390	INX	
 DB 0E0H,80H  		;;140	CPX  #128
 DB 0D0H,011H  		;;1410	BNE  NOTFUL WAIT FOR FULL
 DB 20H,066H,7	;;1420	JSR  DKSETUP
 DB 0A9H,057H  		;;1430 DBUFFL  LDA #'W ; W FOR WRITE
 DB 8DH,02H,03	;;1440	STA  DCOMND
 DB 20H,053H,0E4H	;;1450	JSR  DSKIF
 DB 0C0H,01  		;;1455	CPY  #SUCCES
 DB 0D0H,0B3H  		;;1456	BNE  RETURN
 DB 0A2H,00  		;;1460	LDX  #0; NOW BUFFER EMPTY
 DB 8EH,032H,8	;;1470 NOTFUL STX  DKBPNT
 DB 0A0H,01  		;;1480	LDY  #SUCCES
 DB 60H			;;1490	RTS	
 DB 0			;;150 DKBPNT .BYTE	;;
 DB 0,0  		;;1520 DKBUF  .WORD 	;;

	ENDM


